{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","process","App","useState","data","setData","indexContatos","a","get","then","res","catch","err","console","error","json","obj","i","length","push","useEffect","columns","title","field","validate","rowData","undefined","name","email","phone","className","align","options","actionsColumnIndex","addRowPosition","editable","onRowAdd","newData","Promise","resolve","reject","post","onRowUpdate","oldData","put","id","resp","onRowDelete","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAASC,+C,QCGE,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAD4B,SAObC,IAPa,2EAO5B,gCAAAC,EAAA,sEACqBV,EAClBW,IAAI,aACJC,MAAK,SAACC,GAAD,OAASA,EAAIN,QAClBO,OAAM,SAACC,GACNC,QAAQC,MAAR,8BAAqCF,OALzC,OAUE,IATMG,EADR,OAQQC,EAAM,GAEHC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BD,EAAIG,KAAKJ,EAAKE,IAGhBZ,EAAQW,GAdV,4CAP4B,sBAG5BI,qBAAU,WACRd,MACC,IAmBH,IAAMe,EAAU,CACd,CACEC,MAAO,OACPC,MAAO,OACPC,SAAU,SAACC,GAAD,YAA+BC,IAAjBD,EAAQE,MAAuC,KAAjBF,EAAQE,MAAc,aAE9E,CACEL,MAAO,QACPC,MAAO,QACPC,SAAU,SAACC,GAAD,YAAgCC,IAAlBD,EAAQG,OAAyC,KAAlBH,EAAQG,OAAe,aAEhF,CACEN,MAAO,QACPC,MAAO,QACPC,SAAU,SAACC,GAAD,YAAgCC,IAAlBD,EAAQI,OAAyC,KAAlBJ,EAAQI,OAAe,cAGlF,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAM,SAAV,sBACA,qBAAKD,UAAU,kBAAf,SACE,cAAC,IAAD,CACER,MAAM,kBACND,QAASA,EACTjB,KAAMA,EACN4B,QAAS,CAAEC,oBAAqB,EAAGC,eAAgB,SACnDC,SAAU,CACVC,SAAU,SAACC,GAAD,OAAa,IAAIC,SAAQ,SAACC,EAASC,GAC3C,IAAQb,EAAuBU,EAAvBV,KAAMC,EAAiBS,EAAjBT,MAAOC,EAAUQ,EAAVR,MAErBhC,EAAI4C,KAAK,YAAa,CACpBd,OAAMC,QAAOC,UAGfvB,IACAiC,QAEFG,YAAa,SAACL,EAASM,GAAV,OAAsB,IAAIL,SAAQ,SAACC,EAASC,GACvD,IAAQb,EAAuBU,EAAvBV,KAAMC,EAAiBS,EAAjBT,MAAOC,EAAUQ,EAAVR,MAErBhC,EAAI+C,IAAJ,oBAAqBD,EAAQE,IAAM,CACjClB,OACAC,QACAC,UAEDpB,MAAK,SAACqC,GACLxC,IACAiC,WAGJQ,YAAa,SAACJ,GAAD,OAAa,IAAIL,SAAQ,SAACC,EAASC,GAC9C3C,EAAImD,OAAJ,oBAAwBL,EAAQE,KAC/BpC,MAAK,SAACqC,GACLxC,IACAiC,mBChFdU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c772f19.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL,\n});\n\nexport default api;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MaterialTable from 'material-table';\nimport { AddBox, ArrowDownward } from '@material-ui/icons';\nimport api from './services/api';\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    indexContatos();\n  }, []);\n\n  async function indexContatos() {\n    const json = await api\n    .get('/contatos')\n    .then((res) => res.data)\n    .catch((err) => {\n      console.error(`ops! ocorreu um erro${err}`);\n    });\n\n    const obj = [];\n\n    for (let i = 0; i < json.length; i++) {\n      obj.push(json[i]);\n    }\n\n    setData(obj);\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      field: 'name',\n      validate: (rowData) => (rowData.name === undefined || rowData.name === '' ? 'Required' : true),\n    },\n    {\n      title: 'Email',\n      field: 'email',\n      validate: (rowData) => (rowData.email === undefined || rowData.email === '' ? 'Required' : true),\n    },\n    {\n      title: 'Phone',\n      field: 'phone',\n      validate: (rowData) => (rowData.phone === undefined || rowData.phone === '' ? 'Required' : true),\n    },\n];\n  return (\n    <div className=\"App\">\n      <h1 align=\"center\">Contatos</h1>\n      <div className=\"tabela-contatos\">\n        <MaterialTable\n          title=\"Student Details\"\n          columns={columns}\n          data={data}\n          options={{ actionsColumnIndex: -1, addRowPosition: 'first' }}\n          editable={{\n          onRowAdd: (newData) => new Promise((resolve, reject) => {\n            const { name, email, phone } = newData;\n\n            api.post('/contatos', {\n              name, email, phone,\n            });\n\n            indexContatos();\n            resolve();\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            const { name, email, phone } = newData;\n\n            api.put(`/contatos/${oldData.id}`, {\n              name,\n              email,\n              phone,\n          })\n            .then((resp) => {\n              indexContatos();\n              resolve();\n              });\n          }),\n          onRowDelete: (oldData) => new Promise((resolve, reject) => {\n            api.delete(`/contatos/${oldData.id}`)\n            .then((resp) => {\n              indexContatos();\n              resolve();\n              });\n          }),\n        }}\n        />\n\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}